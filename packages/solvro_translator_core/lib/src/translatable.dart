/// Base class for defining translatable properties in JSON structures.
///
/// This is used to mark and manage properties that need translation support.
sealed class TranslatableJSONProperty {
  /// The name of the field in JSON that this property represents.
  final String fieldName;

  /// Creates a translatable JSON property with the specified field name.
  const TranslatableJSONProperty({required this.fieldName});
}

/// Represents a simple string property in JSON that can be translated.
class TranslatableJSONPropertyString extends TranslatableJSONProperty {
  /// Creates a translatable string property with the specified field name.
  const TranslatableJSONPropertyString({required super.fieldName});
}

/// Represents a nested JSON object that contains translatable properties.
class TranslatableNestedJSONObject extends TranslatableJSONProperty {
  /// List of translatable properties within this nested object.
  final List<TranslatableJSONProperty> properties;

  /// Creates a nested object property with the specified field name and properties.
  const TranslatableNestedJSONObject({required super.fieldName, required this.properties});
}

/// Represents a list of strings in JSON that can be translated.
class TranslatableNestedStringList extends TranslatableJSONProperty {
  /// Creates a translatable string list property with the specified field name.
  const TranslatableNestedStringList({required super.fieldName});
}

/// Represents a list of objects in JSON that contain translatable properties.
class TranslatableNestedObjectList extends TranslatableJSONProperty {
  /// List of translatable properties for each object in the list.
  final List<TranslatableJSONProperty> properties;

  /// Creates a translatable object list property with the specified field name and properties.
  const TranslatableNestedObjectList({required super.fieldName, required this.properties});
}

/// Interface for classes that support translation.
///
/// Classes implementing this interface can specify which of their properties
/// are translatable and provide serialization/deserialization methods.
///
/// Usually this should be generated by the [solvro_translatable_generator](https://pub.dev/packages/solvro_translatable_generator) package.
///
abstract interface class TranslatableInterface {
  /// Returns the list of properties that should be translated.
  List<TranslatableJSONProperty> get translatableJSONProperties;

  /// Converts this object to a JSON map. This usually should be generated by the [json_serializable](https://pub.dev/packages/json_serializable) package.
  Map<String, dynamic> toJson();

  /// Creates a new instance from a JSON map.
  ///
  /// [json] is the map containing the object data.
  ///
  /// This usually should be generated by the [json_serializable](https://pub.dev/packages/json_serializable) package.
  TranslatableInterface fromJson(Map<String, dynamic> json);
}
